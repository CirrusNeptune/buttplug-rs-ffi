trigger:
  branches:
    exclude: ['*']
  tags:
    exclude: ['*']

variables:
  solution: 'ButtplugCSharpFFI.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
  - job: Windows
    pool:
      vmImage: 'windows-2019'
    strategy:
      matrix:
        Debug:
          buildConfiguration: Debug
        Release:
          buildConfiguration: Release
    steps:
      - template: build/build-start.yml
        parameters:
          platform: "win-x64"
      # Set up key after build start, otherwise we won't have nuget to update yet.
      - template: build/setup-signing-key.yml
      - task: VSBuild@1
        displayName: "Build Project"
        workingDirectory: "csharp/"
        inputs:
          solution: '$(solution)'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
          maximumCpuCount: true
#      - task: VSTest@2
#        displayName: "Test Project"
#        inputs:
#          platform: '$(buildPlatform)'
#          configuration: '$(buildConfiguration)'
      - task: CopyFiles@2
        displayName: "Copy nuget packages to staging"
        inputs:
          # Prefix this with Buttplug, otherwise we'll archive the packages directory too.
          contents: "$(System.DefaultWorkingDirectory)/Buttplug*/**/*.nupkg"
          targetFolder: '$(Build.ArtifactStagingDirectory)/nuget'
          cleanTargetFolder: true
      - task: PowerShell@2
        displayName: 'Sign Exported Nuget Packages'
        # Only sign on dev/master builds
        condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/dev'), eq(variables['Build.SourceBranch'], 'refs/heads/master')))
        inputs:
          targetType: inline
          script: |
            Get-ChildItem -Path $(Build.ArtifactStagingDirectory) -Filter *.nupkg -Recurse -File -Name| ForEach-Object {
                nuget sign $(Build.ArtifactStagingDirectory)\$_ -CertificatePath SigningCert.pfx -CertificatePassword "$(NPLabsRepoSigningKey)" -Timestamper http://timestamp.comodoca.com/rfc3161
            }
      - task: PublishPipelineArtifact@0
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'artifacts-$(buildConfiguration)'
